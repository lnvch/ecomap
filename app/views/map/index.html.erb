<div id='map'></div>
<script>
  var osmTiles = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
      attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, <a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>'
  });

  var map = L.map('map')
    .addLayer(osmTiles)
    .setView([53.9, 27.55], 12);

  let air_layer = L.layerGroup().addTo(map)
  let regions_layer = L.layerGroup().addTo(map)
  let water_layer = L.layerGroup().addTo(map)
  let parks_layer = L.layerGroup().addTo(map)
  let lakes_layer = L.layerGroup().addTo(map)
  let user_actions_layer = L.layerGroup().addTo(map)
  let trees_layer = L.layerGroup().addTo(map)

  var overlayMaps = {
    "Air": air_layer,
    "City regions": regions_layer,
    "Water rigidity": water_layer,
    "Parks": parks_layer,
    "Lakes": lakes_layer,
    "User actions": user_actions_layer,
    "Trees by one": trees_layer
  };

  L.control.layers({}, overlayMaps).addTo(map);

  $.ajax({url: "air.json", success: function(result){
    result.features.map(function(item, i, arr) {
      air_marker = L.geoJSON(item.geometry)
        .bindPopup(item.properties['message'])
      air_layer.addLayer(air_marker)
    })
  }});

  $.ajax({url: "regions.json", success: function(result){
    result.features.map(function(item, i, arr) {
      region_area = L.geoJSON(item.geometry,
        {
          style: {
            color: item.properties.stroke,
            weight: item.properties['stroke-width'],
            opacity: item.properties['stroke-opacity'],
            fillColor: item.properties.fill,
            fillOpacity: item.properties['fill-opacity']
          }
        }).bindPopup(item.properties['message']);
      regions_layer.addLayer(region_area);
    });
  }});

  $.ajax({url: "water_quality.json", success: function(result){
    result.features.forEach(function(item, i, arr) {
      water_area = L.geoJSON(
        item.geometry,
        {
          style: {
            color: item.properties.stroke,
            weight: item.properties['stroke-width'],
            opacity: item.properties['stroke-opacity'],
            fillColor: item.properties.fill,
            fillOpacity: item.properties['fill-opacity']
          }
        }).bindPopup(item.properties['message']);
      water_layer.addLayer(water_area);
    });
  }});

  var greenIcon = L.icon({
    iconUrl: '/tree-icon.png',
    iconSize:     [20, 20], // size of the icon
  });

  $.ajax({url: "trees.json", success: function(result){
    result.features.forEach(function(item, i, arr) {
      tree = L.geoJSON(item.geometry,
        {
          pointToLayer: function (feature, latlng) {
            return L.marker(latlng, {icon: greenIcon});
          },
        }).bindPopup("Порода: Ясень</br>Предположительный возраст: 15 лет</br>Статус: здоровое");
      trees_layer.addLayer(tree)
    });
  }});

  $.ajax({url: "parks.json", success: function(result){
    result.features.forEach(function(item, i, arr) {
      park = L.geoJSON(item.geometry,
        {
          style: {
            color: 'green',
          }
        });
      parks_layer.addLayer(park);
    });
  }});

  $.ajax({url: "lakes.json", success: function(result){
    result.features.forEach(function(item, i, arr) {
      lake = L.geoJSON(item.geometry,
        {
          style: {
            color: 'blue',
          }
        });
      lakes_layer.addLayer(lake);
    });
  }});

  $.ajax({url: "markers.json", success: function(result){
    result.features.forEach(function(item, i, arr) {
      user_action = L.geoJSON(item.geometry,{
          pointToLayer: function (feature, latlng) {
            return L.marker(latlng,
              {
                icon: L.icon({
                  iconUrl: item.properties['src'],
                  iconSize:     [30, 30],
                  className: 'rounded-icon'
                })
              });
            },
        });
      user_actions_layer.addLayer(user_action);
    });
  }});
</script>
